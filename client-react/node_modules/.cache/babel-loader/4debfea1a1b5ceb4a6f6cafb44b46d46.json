{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Desktop\\\\Blood-Donation-Web-App\\\\react-app\\\\src\\\\components\\\\DCandidateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select, TextField, withStyles } from \"@material-ui/core\";\nimport useForm from \"./useForm\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/dCandidate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      minWidth: 230\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 230\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst initialFieldValues = {\n  fullName: '',\n  mobile: '',\n  email: '',\n  age: '',\n  bloodGroup: '',\n  address: ''\n};\n\nconst DCandidateForm = ({\n  classes,\n  ...props\n}) => {\n  _s();\n\n  const validate = (fieldValues = values) => {\n    let temp = {};\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? \"\" : \"This field is required!\";\n    if ('mobile' in fieldValues) temp.mobile = fieldValues.mobile ? \"\" : \"This field is required!\";\n    if ('bloodGroup' in fieldValues) temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required!\";\n    if ('email' in fieldValues) temp.email = /^$|.+@.+..+/.test(fieldValues.email) ? \"\" : \"Email is not valid!\";\n    setErrors({ ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange\n  } = useForm(initialFieldValues, validate);\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values);\n\n    if (validate()) {\n      window.alert(\"Validation succeeded\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: classes.root,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"fullName\",\n          variant: \"outlined\",\n          label: \"Full Name\",\n          value: values.fullName,\n          onChange: handleInputChange,\n          ...(errors.fullName && {\n            error: true,\n            helperText: errors.fullName\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email\",\n          variant: \"outlined\",\n          label: \"Email\",\n          value: values.email,\n          onChange: handleInputChange,\n          ...(errors.email && {\n            error: true,\n            helperText: errors.email\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          className: classes.formControl,\n          ...(errors.bloodGroup && {\n            error: true\n          }),\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            ref: inputLabel,\n            children: \"Blood Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"bloodGroup\",\n            value: values.bloodGroup,\n            onChange: handleInputChange,\n            labelWidth: labelWidth,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"Select blood group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"AB+\",\n              children: \"AB+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"AB-\",\n              children: \"AB-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"0+\",\n              children: \"0+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"0-\",\n              children: \"0-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"A+\",\n              children: \"A+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"A-\",\n              children: \"A-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), errors.bloodGroup && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: errors.bloodGroup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"mobile\",\n          variant: \"outlined\",\n          label: \"Mobile\",\n          value: values.mobile,\n          onChange: handleInputChange,\n          ...(errors.mobile && {\n            error: true,\n            helperText: errors.mobile\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"age\",\n          variant: \"outlined\",\n          label: \"Age\",\n          value: values.age,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"address\",\n          variant: \"outlined\",\n          label: \"Address\",\n          value: values.address,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            className: classes.smMargin,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: classes.smMargin,\n            children: \"Resest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DCandidateForm, \"+NjK080RjSfzSZ+BeCSOA7x7bXM=\", false, function () {\n  return [useForm];\n});\n\n_c = DCandidateForm;\n\nconst mapStateToProps = state => {\n  return {\n    dCandidateList: state.dCandidate.list\n  };\n};\n\nconst mapActionToProps = {\n  createDcandidate: actions.create,\n  updateDcandidate: actions.update\n};\nexport default withStyles(styles)(DCandidateForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"DCandidateForm\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Desktop/Blood-Donation-Web-App/react-app/src/components/DCandidateForm.js"],"names":["React","useState","Button","FormControl","FormHelperText","Grid","InputLabel","MenuItem","Select","TextField","withStyles","useForm","connect","actions","styles","theme","root","margin","spacing","minWidth","formControl","smMargin","initialFieldValues","fullName","mobile","email","age","bloodGroup","address","DCandidateForm","classes","props","validate","fieldValues","values","temp","test","setErrors","Object","every","x","setValues","errors","handleInputChange","inputLabel","useRef","labelWidth","setLabelWidth","useEffect","current","offsetWidth","handleSubmit","e","preventDefault","console","log","window","alert","error","helperText","mapStateToProps","state","dCandidateList","dCandidate","list","mapActionToProps","createDcandidate","create","updateDcandidate","update"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select, TextField, withStyles } from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/dCandidate\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst initialFieldValues = {\r\n    fullName: '',\r\n    mobile: '',\r\n    email: '',\r\n    age: '',\r\n    bloodGroup: '',\r\n    address: ''\r\n}\r\n\r\nconst DCandidateForm = ({classes,...props}) => {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = {}\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required!\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile ? \"\" : \"This field is required!\"\r\n        if ('bloodGroup' in fieldValues)\r\n            temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required!\"\r\n        if ('email' in fieldValues)\r\n        temp.email = (/^$|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid!\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values, \r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange\r\n    } = useForm(initialFieldValues, validate)\r\n\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        console.log(values)\r\n\r\n        if (validate()) {\r\n            window.alert(\"Validation succeeded\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <TextField \r\n                    name=\"fullName\"\r\n                    variant=\"outlined\"\r\n                    label=\"Full Name\"\r\n                    value={values.fullName}\r\n                    onChange={handleInputChange}\r\n                    {...(errors.fullName && { error: true, helperText: errors.fullName })}\r\n                    />\r\n                    <TextField \r\n                    name=\"email\"\r\n                    variant=\"outlined\"\r\n                    label=\"Email\"\r\n                    value={values.email}\r\n                    onChange={handleInputChange}\r\n                    {...(errors.email && { error: true, helperText: errors.email })}\r\n                    />\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}\r\n                    {...(errors.bloodGroup && { error: true })}\r\n                    >\r\n                        <InputLabel ref={inputLabel}>Blood Group</InputLabel>\r\n                        <Select\r\n                        name=\"bloodGroup\"\r\n                        value={values.bloodGroup}\r\n                        onChange={handleInputChange}\r\n                        labelWidth={labelWidth}\r\n                        >\r\n                            <MenuItem value=\"\">Select blood group</MenuItem>\r\n                            <MenuItem value=\"AB+\">AB+</MenuItem>\r\n                            <MenuItem value=\"AB-\">AB-</MenuItem>\r\n                            <MenuItem value=\"0+\">0+</MenuItem>\r\n                            <MenuItem value=\"0-\">0-</MenuItem>\r\n                            <MenuItem value=\"A+\">A+</MenuItem>\r\n                            <MenuItem value=\"A-\">A-</MenuItem>\r\n                        </Select>\r\n                        {errors.bloodGroup && <FormHelperText>{errors.bloodGroup}</FormHelperText>}\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField \r\n                    name=\"mobile\"\r\n                    variant=\"outlined\"\r\n                    label=\"Mobile\"\r\n                    value={values.mobile}\r\n                    onChange={handleInputChange}\r\n                    {...(errors.mobile && { error: true, helperText: errors.mobile })}\r\n                    />\r\n                    <TextField \r\n                    name=\"age\"\r\n                    variant=\"outlined\"\r\n                    label=\"Age\"\r\n                    value={values.age}\r\n                    onChange={handleInputChange}\r\n                    />\r\n                    <TextField \r\n                    name=\"address\"\r\n                    variant=\"outlined\"\r\n                    label=\"Address\"\r\n                    value={values.address}\r\n                    onChange={handleInputChange}\r\n                    />\r\n                    <div>\r\n                        <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={classes.smMargin}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                        <Button\r\n                        variant=\"contained\"\r\n                        className={classes.smMargin}\r\n                        >\r\n                            Resest\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dCandidateList: state.dCandidate.list\r\n    }\r\n}\r\n\r\nconst mapActionToProps = {\r\n    createDcandidate: actions.create,\r\n    updateDcandidate: actions.update\r\n}\r\n \r\nexport default withStyles(styles)(DCandidateForm);"]},"metadata":{},"sourceType":"module"}